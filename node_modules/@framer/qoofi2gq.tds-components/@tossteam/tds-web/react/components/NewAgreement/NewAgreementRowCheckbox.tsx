import classnames from "classnames";
import * as React from "react";
import {
  ChangeEvent,
  ComponentProps,
  PropsWithChildren,
  useCallback,
} from "react";
import useControlled from "../../hooks/useControlled";
import Checkbox from "../Checkbox";

interface Props extends ComponentProps<typeof Checkbox> {
  defaultChecked?: boolean;
}

function NewAgreementRowCheckbox({
  checked: checkedProp,
  defaultChecked,
  children,
  className,
  onChange,
  ...rest
}: PropsWithChildren<Props>) {
  const [checked, setChecked] = useControlled({
    controlledValue: checkedProp,
    defaultValue: defaultChecked,
  });

  const handleChange = useCallback(
    (event: ChangeEvent<HTMLInputElement>, checked: boolean) => {
      setChecked(checked);
      onChange?.(event, checked);
    },
    [setChecked, onChange]
  );

  return (
    <Checkbox
      className={classnames("m-new-agreement-row__checkbox", className)}
      type="primary"
      checked={checked}
      onChange={handleChange}
      {...rest}
    >
      {children}
    </Checkbox>
  );
}

export default NewAgreementRowCheckbox;
