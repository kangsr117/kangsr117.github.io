import classNames from "classnames";
import * as React from "react";
import { useMemo } from "react";
import convertNewLineToJSX from "../../utils/convertNewLineToJSX";
import TextButton from "../TextButton";

interface PropsBase {
  className?: string;
  size?: "small" | "normal";
}

interface Title {
  title: React.ReactNode;
}

interface TitleWithDescriptionA extends Title {
  description: React.ReactNode;
  descriptionPosition?: "top";
}

interface TitleWithDescriptionB extends Title {
  description: React.ReactNode;
  descriptionPosition: "bottom";
}

interface TitleWithTextButton extends Title {
  textButtonTitle: string;
  onTextButtonClick: () => void;
}

type TitleVariants =
  | Title
  | TitleWithDescriptionA
  | TitleWithDescriptionB
  | TitleWithTextButton;

type Props = PropsBase & TitleVariants;

export default function BannerTitle(props: Props) {
  const isSmall = props.size === "small";

  const titleTypography = useMemo(() => {
    if (isSmall) {
      return "typography-t5";
    } else {
      return "typography-st8";
    }
  }, [isSmall]);

  return (
    <div className={classNames(props.className, "banner__title")}>
      <h1 className={classNames("banner__title__heading", titleTypography)}>
        {typeof props.title === "string"
          ? convertNewLineToJSX(props.title)
          : props.title}
      </h1>
      {"description" in props ? (
        <h2
          className={classNames("banner__title__subheading", "typography-t6", {
            "banner__title__subheading--bottom":
              props.descriptionPosition === "bottom",
          })}
        >
          {typeof props.description === "string"
            ? convertNewLineToJSX(props.description)
            : props.description}
        </h2>
      ) : null}
      {"textButtonTitle" in props ? (
        <TextButton
          className="banner__title__text-button"
          onClick={props.onTextButtonClick}
          withArrow={true}
          type="grey"
          size="small"
        >
          <span className="banner__title__text-button__contents">
            {props.textButtonTitle}
          </span>
        </TextButton>
      ) : null}
    </div>
  );
}
