import { chunk, last } from 'lodash-es';
import * as React from 'react';

import VirtualKeypadKey, { SPECIAL_KEY } from './VirtualKeypadKey';

interface Props {
  characters: string[];
  numberOfColumns: number;
  onKeyClick: (value: string) => void;
  onBackspaceClick: () => void;
}

class VirtualKeypad extends React.PureComponent<Props> {
  public handleKeyClick = (value: string) => {
    if (value === SPECIAL_KEY.backspace) {
      this.props.onBackspaceClick();
      return;
    }

    if (value === SPECIAL_KEY.blank) {
      return;
    }

    this.props.onKeyClick(value);
  };

  public renderRows() {
    const { characters, numberOfColumns: nc } = this.props;
    const rows = chunk<string>(characters, nc);
    const lastRow = last<string[]>(rows) as string[];

    for (let i = 0; i < nc - lastRow.length; i += 1) {
      lastRow.unshift(SPECIAL_KEY.blank);
    }
    lastRow.push(SPECIAL_KEY.backspace);

    return (
      <>
        {rows.map((row, rowIndex) => {
          return (
            <tr key={rowIndex}>
              {row.map(char => (
                <VirtualKeypadKey key={char} char={char} onKeyClick={this.handleKeyClick} />
              ))}
            </tr>
          );
        })}
      </>
    );
  }

  public render() {
    return (
      <div className="keypad">
        <table className="keypad__table">
          <tbody>{this.renderRows()}</tbody>
        </table>
      </div>
    );
  }
}

export default VirtualKeypad;
