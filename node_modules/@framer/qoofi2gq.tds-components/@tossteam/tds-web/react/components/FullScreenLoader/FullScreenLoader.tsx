import { parseUserAgent } from "@tossteam/webview-env";
import cx from "classnames";
import * as React from "react";
import { ComponentProps, FC, memo, useMemo } from "react";
import { isBrowser } from "src/react/utils/isBrowser";
import { PortalConsumer } from "../../providers/PortalContext";
import Dimmer from "../Dimmer";
import Loader from "../Loader";

type LoaderProps = ComponentProps<typeof Loader>;

export interface Props {
  label?: string;
  loaderType?: LoaderProps["type"];
  onDimmerClick?: () => void;
  className?: string;
  loaderClassName?: string;
}

const androidNavHeight = 56;
const iosNavHeight = 44;

const FullScreenLoader: FC<Props> = ({
  onDimmerClick,
  label,
  className,
  loaderType = "primary",
  loaderClassName,
}) => {
  const marginTop = useMemo(() => {
    if (!isBrowser()) {
      return undefined;
    }

    const { isAndroid, isIOS, appVersion } = parseUserAgent(
      window.navigator.userAgent
    );

    if (appVersion === undefined) {
      return undefined;
    }

    return isAndroid
      ? androidNavHeight * -0.5
      : isIOS
      ? iosNavHeight * -0.5
      : undefined;
  }, []);

  return (
    <PortalConsumer>
      <Dimmer
        innerCenter={true}
        onClick={onDimmerClick}
        className={cx("full-screen-loader", className)}
      >
        <Loader
          type={loaderType as LoaderProps["type"]}
          label={label}
          className={loaderClassName}
          style={{
            marginTop,
          }}
        />
      </Dimmer>
    </PortalConsumer>
  );
};

export default memo(FullScreenLoader);
