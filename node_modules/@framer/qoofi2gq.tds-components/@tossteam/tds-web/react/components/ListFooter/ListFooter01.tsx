import classnames from "classnames";
import * as React from "react";

import isDevelopment from "../../utils/isDevelopment";
import { TextStyle } from "../../styles/TextStyle";
import convertTextAlignToFlexAlign from "../../utils/convertTextAlignToFlexAlign";
import ListFooter, { Props as ListFooterProp } from "./ListFooter";
import { Icon } from "../Icon";

export interface Props extends ListFooterProp {
  /**
   * @deprecated 이 API는 deprecated 되었습니다. children을 대신 사용해주세요.
   * @description`Footer`에 들어갈 문구를 지정합니다.
   */
  title?: string;

  /**
   * 제목 스타일: fontColor와 fontWeight를 지정합니다.
   */
  titleStyle?: TextStyle;

  /**
   * 타이틀의 위치를 정합니다.
   */
  titleTextAlign?: "left" | "center" | "right";

  children?: React.ReactNode;

  /**
   * @description 텍스트 오른쪽에 들어갈 icon을 지정합니다.
   */
  icon?: string;
}

function ListFooter01({
  className,
  title,
  titleStyle = {},
  titleTextAlign,
  border,
  liAttributes = {},
  children = title,
  icon,
}: Props) {
  React.useEffect(() => {
    if (!isDevelopment()) {
      return;
    }

    if (title !== undefined) {
      // eslint-disable-next-line no-console
      console.warn(
        "Prop: `title`은 deprecated 되었습니다. children을 대신 사용해주세요."
      );
    }
  }, [title]);

  return (
    <ListFooter
      className={classnames("list-footer-01", "typography-t5", className)}
      border={border}
      liAttributes={{
        ...liAttributes,
        style: {
          ...titleStyle,
          justifyContent:
            titleTextAlign !== undefined
              ? convertTextAlignToFlexAlign(titleTextAlign)
              : undefined,
          ...liAttributes.style,
        },
      }}
    >
      <div style={{ display: "flex", alignItems: "flex-top" }}>
        <span>{children}</span>
        {icon !== undefined ? (
          <Icon name={icon} color={titleStyle.color} />
        ) : null}
      </div>
    </ListFooter>
  );
}

export default ListFooter01;
