import classnames from "classnames";
import * as React from "react";
import { HTMLAttributes } from "react";

export type BorderType =
  | "full"
  | "indented"
  | "padding24"
  | "height16"
  | "space"
  | "spaceSmall";

interface BaseProps {
  type?: BorderType;
  height?: number | undefined;
}

interface HairlineProps extends BaseProps {
  type: "full" | "indented" | "padding24";
  height?: undefined;
}

interface SpaceProps extends BaseProps {
  type: "space" | "spaceSmall" | "height16";
  height?: number;
}

export type Props = (HairlineProps | SpaceProps) &
  HTMLAttributes<HTMLHRElement>;

const hairlineTypes: BorderType[] = ["full", "indented", "padding24"];
const paddedTypes: BorderType[] = ["indented", "padding24"];

const heightMap: Record<BorderType, number> = {
  full: 1,
  indented: 1,
  padding24: 1,
  height16: 16,
  space: 24,
  spaceSmall: 16,
};

export function Border({ type = "full", className, style, height }: Props) {
  const isHairline = hairlineTypes.includes(type);

  return (
    <hr
      className={classnames(
        "border",
        isHairline ? "hairline" : "t-bg--greyBackground",
        {
          "hairline--padding24": paddedTypes.includes(type),
        },
        className
      )}
      style={{
        height: height ?? heightMap[type],
        ...style,
      }}
    />
  );
}
