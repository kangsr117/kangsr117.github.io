import classNames from "classnames";
import * as React from "react";
import CalendarMonthList from "./CalendarMonthList";
import useBlockDayModifiers from "./hooks/useBlockDayModifiers";
import useSingleDatePick from "./hooks/useSingleDatePick";
import useSinglePickModifiers from "./hooks/useSinglePickModifiers";

const noop = () => {};

export interface Props {
  selectedDate: Date | undefined;
  onDateChange?: (date: Date | undefined) => void;
  /** @default 이번 달 */
  initialMonth?: Date;
  maxVisibleMonth?: Date;
  /** @default 오늘 */
  minSelectableDate?: Date;
  maxSelectableDate?: Date;
  dayAriaLabelFormat?: string;
  className?: string;
  /** @default 5 */
  monthPageSize?: number;
  /** @default 50 */
  scrollThreshold?: number;
}

export default function SingleDatePicker({
  selectedDate: initialSelectedDate,
  initialMonth = new Date(),
  maxVisibleMonth,
  minSelectableDate = new Date(),
  maxSelectableDate,
  dayAriaLabelFormat,
  onDateChange = noop,
  className,
  monthPageSize = 5,
  scrollThreshold = 50,
}: Props) {
  const [selectedDate, handleDayClick] = useSingleDatePick(
    initialSelectedDate,
    onDateChange
  );
  const singlePickModifiers = useSinglePickModifiers(selectedDate);
  const blockDayModifiers = useBlockDayModifiers({
    minDate: minSelectableDate,
    maxDate: maxSelectableDate,
  });

  return (
    <CalendarMonthList
      onDayClick={handleDayClick}
      initialMonth={initialMonth}
      maxVisibleMonth={maxVisibleMonth}
      modifiers={{
        ...singlePickModifiers,
        ...blockDayModifiers,
      }}
      dayAriaLabelFormat={dayAriaLabelFormat}
      monthPageSize={monthPageSize}
      scrollThreshold={scrollThreshold}
      className={classNames("single-date-picker", className)}
    />
  );
}
