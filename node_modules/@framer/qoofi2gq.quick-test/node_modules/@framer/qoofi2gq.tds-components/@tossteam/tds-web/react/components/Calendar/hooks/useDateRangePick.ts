import { isAfter, isSameDay } from 'date-fns';
import { useCallback, useState } from 'react';

const noop = () => {};

export default function useDateRangePick(
  initialStartDate: Date | undefined,
  initialEndDate: Date | undefined,
  onDatesChange: (date: [Date | undefined, Date | undefined]) => void = noop,
  allowSameDateSelect = false
): [Date | undefined, Date | undefined, (day: Date) => void] {
  const [startDate, setStartDate] = useState(initialStartDate);
  const [endDate, setEndDate] = useState(initialEndDate);

  const handleDayClick = useCallback(
    (day: Date) => {
      let nextStartDate = startDate;
      let nextEndDate = endDate;

      if (startDate === undefined) {
        nextStartDate = day;
      } else if (endDate === undefined) {
        if (isAfter(day, startDate) || (allowSameDateSelect && isSameDay(day, startDate))) {
          nextEndDate = day;
        } else {
          nextStartDate = day;
        }
      } else {
        nextStartDate = day;
        nextEndDate = undefined;
      }

      setStartDate(nextStartDate);
      setEndDate(nextEndDate);
      onDatesChange([nextStartDate, nextEndDate]);
    },
    [startDate, endDate, onDatesChange, allowSameDateSelect]
  );

  return [startDate, endDate, handleDayClick];
}
