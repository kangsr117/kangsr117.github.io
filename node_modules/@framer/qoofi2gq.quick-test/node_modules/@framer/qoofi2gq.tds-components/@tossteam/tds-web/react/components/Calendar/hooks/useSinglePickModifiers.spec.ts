import { renderHook } from '@testing-library/react-hooks';
import { addDays } from 'date-fns';

import cloneDate from '../../../utils/cloneDate';
import useSinglePickModifiers from './useSinglePickModifiers';

describe('Calendar.hooks.useSinglePickModifiers', () => {
  test('선택날자와 같은 날이면 "selected" 변경값이 참이다.', () => {
    const selectedDate = new Date(2019, 5, 4);
    const { result } = renderHook(() => useSinglePickModifiers(selectedDate));

    const modifier = result.current.selected;

    expect(modifier({ date: cloneDate(selectedDate) })).toBe(true);
  });

  test('선택날자와 다른 날이면 "selected" 변경값이 거짓이다.', () => {
    const selectedDate = new Date(2019, 5, 4);
    const { result } = renderHook(() => useSinglePickModifiers(selectedDate));

    const modifier = result.current.selected;
    const otherDate = addDays(selectedDate, 5);

    expect(modifier({ date: otherDate })).toBe(false);
  });

  test('선택날자가 없으면 "selected" 변경값이 거짓이다.', () => {
    const { result } = renderHook(() => useSinglePickModifiers(undefined));
    const modifier = result.current.selected;
    const someDate = new Date(2019, 5, 3);

    expect(modifier({ date: someDate })).toBe(false);
  });
});
