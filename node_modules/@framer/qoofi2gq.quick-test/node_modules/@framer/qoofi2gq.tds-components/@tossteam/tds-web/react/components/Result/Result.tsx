import * as React from "react";
import { cloneElement, ReactElement, ReactNode } from "react";
import { adaptive } from "../../../../../@tossteam/colors";
import { Icon } from "../Icon";
import { default as Txt } from "../Text";

interface Props {
  figure?: ReactElement<any, any>;
  title?: ReactNode;
  description?: ReactNode;
  button?: ReactElement;
}

function Result({ figure, title, description, button }: Props) {
  const isIconFigure =
    figure !== undefined &&
    React.Children.only(figure).type.displayName === Icon.displayName;

  return (
    <div className="result" style={{ background: "transparent" }}>
      {figure !== undefined && (
        <div className={isIconFigure ? "result__icon" : "result__figure"}>
          {figure}
        </div>
      )}
      <Txt
        typography="t5"
        fontWeight="medium"
        color={adaptive.grey800}
        className="result__title"
        stringToJSX={true}
        as="h5"
      >
        {title}
      </Txt>
      <Txt typography="t6" color={adaptive.grey600} as="p" stringToJSX={true}>
        {description}
      </Txt>
      {button != null
        ? cloneElement(button, {
            className: "result__button",
            size: "medium",
          })
        : null}
    </div>
  );
}

export default Result;
