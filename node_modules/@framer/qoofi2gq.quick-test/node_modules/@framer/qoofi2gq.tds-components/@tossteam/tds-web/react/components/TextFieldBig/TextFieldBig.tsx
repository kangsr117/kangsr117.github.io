import classnames from "classnames";
import * as React from "react";
import { InputHTMLAttributes, forwardRef, useContext } from "react";

import { Context as FormGroupContext } from "../Form/FormGroup";

export interface Props extends InputHTMLAttributes<HTMLInputElement> {
  /**
   * 에러 상태를 표시합니다.
   */
  hasError?: boolean;

  /**
   * 우측에 표시될 접미사를 지정합니다.
   */
  suffix?: string;

  /**
   * 텍스트 마스킹 여부를 지정합니다.
   */
  secret?: boolean;

  textSecurity?: boolean;
}

const TextFieldBig = forwardRef<HTMLInputElement, Props>(
  (
    {
      hasError,
      disabled,
      secret = false,
      className,
      suffix,
      textSecurity = false,
      ...inputAttrs
    },
    ref
  ) => {
    const formGroupContext = useContext(FormGroupContext);

    return (
      <div
        className={classnames(
          "text-field-big",
          { "form-control": formGroupContext.isInForm },
          { "text-field-big--disabled": disabled },
          { "text-field-big--error": hasError ?? formGroupContext.hasError },
          { "text-field-big--secret": secret },
          "typography-st4",
          className
        )}
      >
        <input
          ref={ref}
          className={classnames("text-field-big__input", {
            "text-field-line__input--secured": textSecurity,
          })}
          disabled={disabled}
          {...inputAttrs}
        />
        {suffix !== undefined ? (
          <span className="text-field-big__suffix">{suffix}</span>
        ) : null}
        <span className="text-field-big__bottom-line" />
      </div>
    );
  }
);

export default TextFieldBig;
