import { action } from "@storybook/addon-actions";
import { boolean } from "@storybook/addon-knobs";
import { storiesOf } from "@storybook/react";
import * as React from "react";
import { useState } from "react";
import { useDialog } from "src/react";
import { Button } from "../Button";
import ConfirmDialog from "./ConfirmDialog";

function OverviewExample() {
  const [openedDialog, setOpenedDialog] = useState<string | undefined>(
    undefined
  );
  const isLongButton = boolean("LongButtonText", false);
  const cancelText = isLongButton ? "아니오, 취소해주세요" : "취소";
  const confirmText = isLongButton ? "네, 알겠습니다" : "확인";

  return (
    <>
      <Button
        onClick={() => {
          setOpenedDialog("titleOnly");
        }}
      >
        Title만 있는 다이얼로그
      </Button>
      <ConfirmDialog
        open={openedDialog === "titleOnly"}
        title={"로그인 정보와 입력하신\n인증정보가 다릅니다"}
        onClose={() => {
          setOpenedDialog(undefined);
        }}
        cancelButton={<Button>{cancelText}</Button>}
        confirmButton={<Button>{confirmText}</Button>}
      />
      <Button
        htmlStyle={{
          marginTop: "24px",
        }}
        onClick={() => {
          setOpenedDialog("withDescription");
        }}
      >
        Description 포함
      </Button>
      <ConfirmDialog
        open={openedDialog === "withDescription"}
        title={"김토스님의 의견이\n잘 전달되었습니다"}
        description={`소중한 의견을 바탕으로 더 간편한\n서비스를 만들겠습니다.`}
        onClose={() => {
          setOpenedDialog(undefined);
        }}
        cancelButton={<Button>{cancelText}</Button>}
        confirmButton={<Button>{confirmText}</Button>}
      />
    </>
  );
}

function UseDialogExample() {
  const { openConfirm } = useDialog();

  return (
    <Button
      onClick={async () => {
        const confirmed = await openConfirm({
          title: "김토스님의 의견이\n잘 전달되었습니다",
          description: `소중한 의견을 바탕으로 더 간편한\n서비스를 만들겠습니다.`,
          confirmButton: (
            <Button onClick={action("확인 클릭")}>네, 알겠습니다</Button>
          ),
          cancelButton: "아니오, 취소해주세요",
        });

        action("Dialog confirmed")(confirmed);
      }}
    >
      다이얼로그 열기
    </Button>
  );
}

storiesOf("ConfirmDialog", module)
  .addDecorator((storyFn) => {
    return <div style={{ padding: "24px" }}>{storyFn()}</div>;
  })
  .add("Overview", () => {
    return <OverviewExample />;
  })
  .add("useDialog", () => {
    return <UseDialogExample />;
  });
