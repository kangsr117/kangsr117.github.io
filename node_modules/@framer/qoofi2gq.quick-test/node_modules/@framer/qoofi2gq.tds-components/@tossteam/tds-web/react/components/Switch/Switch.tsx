import classnames from "classnames";
import * as React from "react";
import generateID from "../../utils/generateID";

export interface Props {
  className?: string;
  name?: string;
  disabled?: boolean;
  checked?: boolean;
  onChange?: (
    event: React.ChangeEvent<HTMLInputElement>,
    checked: boolean
  ) => void;
}

export class Switch extends React.Component<Props> {
  public static defaultProps = {
    disabled: false,
  };

  public state: {
    uniqId?: string;
  } = {
    uniqId: undefined,
  };

  public componentDidMount() {
    this.setState({ uniqId: generateID("switch-") });
  }

  public render() {
    return (
      <div className={classnames("switch", this.props.className)}>
        <input
          className="switch__input"
          type="checkbox"
          id={this.state.uniqId}
          name={this.props.name}
          disabled={this.props.disabled}
          checked={this.props.checked}
          onChange={this.handleInputChange}
        />
        <label className="switch__label" htmlFor={this.state.uniqId} />
      </div>
    );
  }

  private handleInputChange = (event: React.ChangeEvent<HTMLInputElement>) => {
    if (this.props.onChange !== undefined) {
      this.props.onChange(event, event.target.checked);
    }
  };
}
