import { parseToRgb } from 'polished';
import adaptiveDictionary from './adaptiveDictionary';
import { getLightColor, getDarkColor } from '.';

const adaptiveKeys = Object.keys(adaptiveDictionary) as Array<keyof typeof adaptiveDictionary>;

describe('index', () => {
  describe('getLightColor / getDarkColor', () => {
    test('반환하는 모든 값은 CSS 컬러다.', () => {
      expect(() => {
        for (const key of adaptiveKeys) {
          parseToRgb(getLightColor(key));
          parseToRgb(getDarkColor(key));
        }
      }).not.toThrowError();
    });

    test('모든 light / dark color의 값이 다르다.', () => {
      adaptiveKeys.forEach(key => {
        expect(getLightColor(key)).not.toBe(getDarkColor(key));
      });
    });
  });
});
