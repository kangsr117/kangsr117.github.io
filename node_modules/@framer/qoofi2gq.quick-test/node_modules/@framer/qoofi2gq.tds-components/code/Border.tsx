import { addPropertyControls, ControlType } from 'framer';
import * as React from 'react';
import { Border as TDSBorder, BorderType } from '../@tossteam/tds-web/react/components/Border/Border';
import { TDSComponent } from '../src/components/TDSComponent';
import '../src/styles/tds-framer.css';
import { makeComponentDisplayName } from '../src/utils/makeDisplayName';

interface Props {
  heightType: '일반적인 보더' | '두꺼운 보더';
  padding: '왼쪽' | '없음';
}

const typeByPaddingOption: { [key: string]: BorderType } = {
  왼쪽: 'padding24',
  없음: 'full',
};

export function Border({ heightType, padding }: Props): JSX.Element {
  const type = heightType === '일반적인 보더' ? typeByPaddingOption[padding] : 'height16';
  return (
    <TDSComponent
      name="Border"
      summary={{
        type,
      }}
    >
      <TDSBorder type={type} />
    </TDSComponent>
  );
}

addPropertyControls(Border, {
  heightType: {
    title: '높이',
    type: ControlType.Enum,
    displaySegmentedControl: true,
    options: ['일반적인 보더', '두꺼운 보더'],
    defaultValue: '일반적인 보더',
  },
  padding: {
    title: '여백',
    type: ControlType.Enum,
    displaySegmentedControl: true,
    options: ['왼쪽', '없음'],
    defaultValue: '왼쪽',
    hidden(props) {
      return props.heightType !== '일반적인 보더';
    },
  },
});

(Border as any).defaultProps = {
  width: 375,
  height: 1,
};

Border.displayName = makeComponentDisplayName('Border', '보더');
