import { renderHook } from '@testing-library/react-hooks';
import { addDays, subDays } from 'date-fns';

import useBlockDayModifiers from './useBlockDayModifiers';

describe('Calendar.hooks.useBlockDayModifiers', () => {
  test('"minDate" 옵션을 설정한 경우 minDate 이전의 날짜들은 "disabled" 변경값이 참이다.', () => {
    const minDate = new Date(2019, 6, 31);
    const { result } = renderHook(() => useBlockDayModifiers({ minDate }));

    const modifier = result.current['disabled'];

    expect(modifier({ date: minDate })).toBe(false);

    const beforeMinDate = subDays(minDate, 1);
    expect(modifier({ date: beforeMinDate })).toBe(true);
  });

  test('"maxDate" 옵션을 설정한 경우 maxDate 이후의 날짜들은 "disabled" 변경값이 참이다.', () => {
    const maxDate = new Date(2019, 7, 31); // TMI(@seokju-na): 제 생일
    const { result } = renderHook(() => useBlockDayModifiers({ maxDate }));

    const modifier = result.current['disabled'];

    expect(modifier({ date: maxDate })).toBe(false);

    const afterMaxDate = addDays(maxDate, 1);
    expect(modifier({ date: afterMaxDate })).toBe(true);
  });
});
