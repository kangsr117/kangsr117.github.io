import { colors, adaptive } from '@tossteam/colors';

import isDevelopment from '../utils/isDevelopment';

const Color: Record<
  | 'Grey50'
  | 'Grey100'
  | 'Grey200'
  | 'Grey300'
  | 'Grey400'
  | 'Grey500'
  | 'Grey600'
  | 'Grey700'
  | 'Grey800'
  | 'Grey900'
  | 'GreyOpacity50'
  | 'GreyOpacity100'
  | 'GreyOpacity200'
  | 'GreyOpacity300'
  | 'GreyOpacity400'
  | 'GreyOpacity500'
  | 'GreyOpacity600'
  | 'GreyOpacity700'
  | 'GreyOpacity800'
  | 'GreyOpacity900'
  | 'White'
  | 'Black'
  | 'Blue50'
  | 'Blue200'
  | 'Blue100'
  | 'Blue300'
  | 'Blue400'
  | 'Blue500'
  | 'Blue600'
  | 'Blue700'
  | 'Blue800'
  | 'Blue900'
  | 'Red50'
  | 'Red100'
  | 'Red200'
  | 'Red300'
  | 'Red400'
  | 'Red500'
  | 'Red600'
  | 'Red700'
  | 'Red800'
  | 'Red900'
  | 'Orange50'
  | 'Orange100'
  | 'Orange200'
  | 'Orange300'
  | 'Orange400'
  | 'Orange500'
  | 'Orange600'
  | 'Orange700'
  | 'Orange800'
  | 'Orange900'
  | 'Yellow50'
  | 'Yellow100'
  | 'Yellow200'
  | 'Yellow300'
  | 'Yellow400'
  | 'Yellow500'
  | 'Yellow600'
  | 'Yellow700'
  | 'Yellow800'
  | 'Yellow900'
  | 'Purple50'
  | 'Purple100'
  | 'Purple200'
  | 'Purple300'
  | 'Purple400'
  | 'Purple500'
  | 'Purple600'
  | 'Purple700'
  | 'Purple800'
  | 'Purple900'
  | 'Teal50'
  | 'Teal100'
  | 'Teal200'
  | 'Teal300'
  | 'Teal400'
  | 'Teal500'
  | 'Teal600'
  | 'Teal700'
  | 'Teal800'
  | 'Teal900'
  | 'Green50'
  | 'Green100'
  | 'Green200'
  | 'Green300'
  | 'Green400'
  | 'Green500'
  | 'Green600'
  | 'Green700'
  | 'Green800'
  | 'Green900'
  | 'WhiteOpacity50'
  | 'WhiteOpacity100'
  | 'WhiteOpacity200'
  | 'WhiteOpacity300'
  | 'WhiteOpacity400'
  | 'WhiteOpacity500'
  | 'WhiteOpacity600'
  | 'WhiteOpacity700'
  | 'WhiteOpacity800'
  | 'WhiteOpacity900'
  | 'InverseGrey50'
  | 'InverseGrey100'
  | 'InverseGrey200'
  | 'InverseGrey300'
  | 'InverseGrey400'
  | 'InverseGrey500'
  | 'InverseGrey600'
  | 'InverseGrey700'
  | 'InverseGrey800'
  | 'InverseGrey900'
  | 'AdaptiveGrey50'
  | 'AdaptiveGrey100'
  | 'AdaptiveGrey200'
  | 'AdaptiveGrey300'
  | 'AdaptiveGrey400'
  | 'AdaptiveGrey500'
  | 'AdaptiveGrey600'
  | 'AdaptiveGrey700'
  | 'AdaptiveGrey800'
  | 'AdaptiveGrey900'
  | 'AdaptiveOpacity50'
  | 'AdaptiveOpacity100'
  | 'AdaptiveOpacity200'
  | 'AdaptiveOpacity300'
  | 'AdaptiveOpacity400'
  | 'AdaptiveOpacity500'
  | 'AdaptiveOpacity600'
  | 'AdaptiveOpacity700'
  | 'AdaptiveOpacity800'
  | 'AdaptiveOpacity900'
  | 'AdaptiveBackground'
  | 'AdaptiveGreyBackground'
  | 'AdaptiveLayeredBackground'
  | 'AdaptiveFloatBackground',
  string
> = {} as any;

for (const key in colors) {
  Object.defineProperty(Color, `${key.charAt(0).toUpperCase()}${key.slice(1)}`, {
    get: () => {
      if (isDevelopment()) {
        // eslint-disable-next-line no-console
        console.warn('Color는 Deprecated 되었습니다. @tossteam/colors를 사용해주세요.');
      }

      return colors[key as keyof typeof colors];
    },
  });
}

for (const key in adaptive) {
  Object.defineProperty(Color, `Adaptive${key.charAt(0).toUpperCase()}${key.slice(1)}`, {
    get: () => {
      if (isDevelopment()) {
        // eslint-disable-next-line no-console
        console.warn('Color는 Deprecated 되었습니다. @tossteam/colors를 사용해주세요.');
      }

      return adaptive[key as keyof typeof adaptive];
    },
  });
}

export default Color;
