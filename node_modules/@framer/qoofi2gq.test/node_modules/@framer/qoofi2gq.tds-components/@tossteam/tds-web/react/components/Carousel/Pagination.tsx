import classnames from "classnames";
import * as React from "react";
import { CSSProperties, useMemo } from "react";
import { PaginationPosition, PaginationTheme } from "./Carousel";

export interface Props {
  className?: string;
  position: PaginationPosition;
  verticalMarginFromEdge: number;
  horizontalMarginFromEdge: number;
  paginationTheme: PaginationTheme;
}

type VerticalPosition = "top" | "bottom";
type HorizontalPosition = "left" | "right";

function Pagination({
  position,
  className,
  verticalMarginFromEdge,
  horizontalMarginFromEdge,
  paginationTheme,
}: Props) {
  const paginationStyle = useMemo(() => {
    const [verticalPosition, horizontalPosition] = position.split("-") as [
      VerticalPosition,
      HorizontalPosition | undefined
    ];

    const style: CSSProperties = {};

    style[verticalPosition] = verticalMarginFromEdge + "px";

    if (horizontalPosition !== undefined) {
      style["left"] =
        horizontalPosition === "left"
          ? horizontalMarginFromEdge + "px"
          : "auto";
      style["right"] =
        horizontalPosition === "right"
          ? horizontalMarginFromEdge + "px"
          : "auto";
      style["transform"] = "none";
    }

    return style;
  }, [horizontalMarginFromEdge, position, verticalMarginFromEdge]);

  return (
    <div
      className={classnames(
        "swiper-pagination",
        `swiper-pagination--${paginationTheme}`,
        className
      )}
      style={paginationStyle}
    />
  );
}

export default React.memo(Pagination);
