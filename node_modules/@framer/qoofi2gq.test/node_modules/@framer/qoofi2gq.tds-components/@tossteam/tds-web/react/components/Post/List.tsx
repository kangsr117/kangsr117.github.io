import classNames from "classnames";
import * as React from "react";
import { ReactNode } from "react";
import { Typography } from "../Text";

interface Props {
  className?: string;
  children?: ReactNode;
  small?: boolean;
}

const ListPrototype = ({
  children,
  className,
  small = false,
  listType: List,
  ...rest
}: Props & { listType: "ol" | "ul" }) => {
  return (
    <List
      className={classNames(
        className,
        "post-list",
        `post-list-${List}`,
        `typography-${small ? Typography.T7 : Typography.ST10}`
      )}
      {...rest}
    >
      {children}
    </List>
  );
};

export const PostOl = React.memo((props: Props) => {
  return <ListPrototype listType="ol" {...props} />;
});

export const PostUl = React.memo((props: Props) => {
  return <ListPrototype listType="ul" {...props} />;
});

export const PostLi = React.memo(
  ({ className, children }: Omit<Props, "small">) => {
    return (
      <li
        className={classNames(className, "post-list--item")}
        style={{ whiteSpace: "pre-wrap" }}
      >
        {children}
      </li>
    );
  }
);
