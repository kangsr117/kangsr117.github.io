import { action } from '@storybook/addon-actions';
import { boolean, text, number } from '@storybook/addon-knobs';
import { storiesOf } from '@storybook/react';
import * as React from 'react';

import { Tab, Txt } from 'src/react';

const tabTitles = [
  '토스',
  '토스보험서비스',
  '토스증권',
  '토스페이먼츠',
  '토스뱅크',
  '뱅크샐러드',
  '카카오뱅크',
];

storiesOf('Tab', module)
  .addParameters({})
  .addDecorator(storyFn => {
    return <div style={{ padding: '24px 8px' }}>{storyFn()}</div>;
  })
  .add('default', () => {
    const countKnob = number('표시할 탭 수', 3, {
      range: true,
      min: 2,
      max: 4,
      step: 1,
    });
    const tabTitleKnobs = tabTitles.slice(0, 4).map((title, index) => text(`${index} tab`, title));
    const redBeanKnobs = tabTitleKnobs.map(title => boolean(`redBean - ${title}`, false));
    const redBeanIndexes = redBeanKnobs
      .map((v, i) => (v ? i : null))
      .filter((i): i is number => i !== null);

    const [selectedIndex, setSelectedIndex] = React.useState<number>(2);

    const onChange = (index: number) => {
      action(`Setting value to ${index}`)(index);
      setSelectedIndex(index);
    };

    return (
      <>
        <Txt>
          fluid: false
          <br />
          최대 4개까지 사용
        </Txt>
        <div style={{ padding: '20px 0' }}>
          <Tab onChange={onChange}>
            {tabTitleKnobs.slice(0, Math.min(countKnob, 4)).map((title, index) => (
              <Tab.Item
                key={title + index}
                selected={index === selectedIndex}
                redBean={redBeanIndexes.includes(index)}
              >
                {title}
              </Tab.Item>
            ))}
          </Tab>
        </div>
      </>
    );
  })
  .add('fluid', () => {
    const countKnob = number('표시할 탭 수', 3, {
      range: true,
      min: 2,
      max: tabTitles.length,
      step: 1,
    });
    const tabTitleKnobs = tabTitles
      .slice(0, countKnob)
      .map((title, index) => text(`tab - ${index}`, title));
    const redBeanKnobs = tabTitleKnobs.map(title => boolean(`redBean - ${title}`, false));
    const redBeanIndexes = redBeanKnobs
      .map((v, i) => (v ? i : null))
      .filter((i): i is number => i !== null);

    const [selectedIndex, setSelectedIndex] = React.useState<number>(2);

    const onChange = (index: number) => {
      action(`Setting value to ${index}`)(index);
      setSelectedIndex(index);
    };

    return (
      <>
        <Txt>
          fluid: true
          <br />
          좌우 스크롤 가능
        </Txt>
        <div style={{ padding: '20px 0' }}>
          <Tab fluid onChange={onChange}>
            {tabTitleKnobs.slice(0, Math.min(countKnob, 7)).map((title, index) => (
              <Tab.Item
                key={title + index}
                selected={index === selectedIndex}
                redBean={redBeanIndexes.includes(index)}
              >
                {title}
              </Tab.Item>
            ))}
          </Tab>
        </div>
      </>
    );
  });
