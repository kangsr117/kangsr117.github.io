import classNames from "classnames";
import * as React from "react";
import { ReactNode } from "react";
import convertNewLineToJSX from "../../utils/convertNewLineToJSX";

type HeaderType = "h1" | "h2" | "h3" | "h4";

const headerFontSizes: Record<HeaderType, number> = {
  h1: 26,
  h2: 22,
  h3: 19,
  h4: 16,
};

interface Props {
  className?: string;
  /**
   * @deprecated 'children'을 대신 사용해주세요.
   */
  title?: string;
  children?: ReactNode;
}

const HeaderPrototype = ({
  title,
  className,
  headerType: Header,
  children = title,
}: Props & { headerType: HeaderType }) => {
  return (
    <Header
      className={classNames(
        className,
        "post-header",
        `post-header-${Header}`,
        `font-size--${headerFontSizes[Header]}`
      )}
    >
      {typeof children === "string" ? convertNewLineToJSX(children) : children}
    </Header>
  );
};

export const PostH1 = React.memo((props: Props) => {
  return <HeaderPrototype headerType="h1" {...props} />;
});

export const PostH2 = React.memo((props: Props) => {
  return <HeaderPrototype headerType="h2" {...props} />;
});

export const PostH3 = React.memo((props: Props) => {
  return <HeaderPrototype headerType="h3" {...props} />;
});

export const PostH4 = React.memo((props: Props) => {
  return <HeaderPrototype headerType="h4" {...props} />;
});
