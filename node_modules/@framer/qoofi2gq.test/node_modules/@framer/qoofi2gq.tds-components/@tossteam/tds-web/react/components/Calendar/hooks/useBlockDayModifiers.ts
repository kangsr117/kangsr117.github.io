import { isAfter, isBefore, isSameDay } from 'date-fns';
import { useCallback, useMemo } from 'react';

import { CalendarModifierSetOf } from '../models/CalendarModifierSet';

type ModifierSet = CalendarModifierSetOf<'disabled'>;

interface Options {
  minDate?: Date;
  maxDate?: Date;
}

export default function useBlockDayModifiers({ minDate, maxDate }: Options = {}): ModifierSet {
  const isDayDisabled = useCallback(
    ({ date }) => {
      if (minDate) {
        if (!isSameDay(date, minDate) && isBefore(date, minDate)) {
          return true;
        }
      }

      if (maxDate !== undefined) {
        if (!isSameDay(date, maxDate) && isAfter(date, maxDate)) {
          return true;
        }
      }

      return false;
    },
    [minDate, maxDate]
  );

  return useMemo(
    () => ({
      disabled: isDayDisabled,
    }),
    [isDayDisabled]
  );
}
