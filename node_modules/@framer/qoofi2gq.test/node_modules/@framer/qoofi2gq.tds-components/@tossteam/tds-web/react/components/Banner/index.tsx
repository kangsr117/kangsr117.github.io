import classnames from "classnames";
import * as React from "react";
import { useRef, useState } from "react";
import useResizeObserver from "../../hooks/useResizeObserver";
import generateID from "../../utils/generateID";
import { BezierMask } from "../BezierMask.tsx";
import BannerIcon from "./Icon";
import BannerTitle from "./Title";

type DivProps = React.HTMLAttributes<HTMLDivElement>;

interface Props extends Omit<DivProps, "title"> {
  className?: string;
  title: React.ReactNode;
  accessory: React.ReactNode;
  backgroundColor: string;
}

export default function Banner({
  className,
  title,
  accessory,
  backgroundColor,
  onClick,
  ...divProps
}: Props) {
  const ref = useRef<HTMLDivElement | null>(null);
  const id = useRef(generateID("banner"));
  const [rect, setRect] = useState<
    { width: number; height: number } | undefined
  >(undefined);

  useResizeObserver(ref, ({ clientHeight, clientWidth }) => {
    if (
      rect === undefined ||
      rect.height !== clientHeight ||
      rect.width !== clientWidth
    ) {
      setRect({
        width: clientWidth,
        height: clientHeight,
      });
    }
  });

  const isClickable = onClick !== undefined;

  return (
    <div
      ref={ref}
      className={classnames(className, "banner", {
        "banner--button": isClickable,
      })}
      style={{
        backgroundColor,
        clipPath: `url(#${id.current})`,
      }}
      role={isClickable ? "button" : undefined}
      onClick={onClick}
      {...divProps}
    >
      {title}
      <div className="banner__accessory">{accessory}</div>
      {rect !== undefined ? (
        <BezierMask
          id={id.current}
          width={rect.width}
          height={rect.height}
          radius={12}
        />
      ) : null}
    </div>
  );
}

Banner.Title = BannerTitle;
Banner.Icon = BannerIcon;
