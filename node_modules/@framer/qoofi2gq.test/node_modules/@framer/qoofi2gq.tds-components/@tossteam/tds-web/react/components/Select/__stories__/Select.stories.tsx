import { action } from "@storybook/addon-actions";
import { boolean, text } from "@storybook/addon-knobs";
import { storiesOf } from "@storybook/react";
import * as React from "react";
import { Select } from "src/react";

type SelectProps = React.ComponentProps<typeof Select>;

type Props = Exclude<SelectProps, "value" | "onChange">;

const values = ["React", "Vue", "Angular"];

function Example(props: Props) {
  const [value, setValue] = React.useState<SelectProps["value"]>(values[0]);

  React.useEffect(() => {
    if (props.placeholder != null) {
      setValue(undefined);
    }
  }, [props.placeholder]);

  const onChange = (e: React.ChangeEvent<HTMLSelectElement>) => {
    action(`Setting value to ${e.target.value}`)(e);
    setValue(e.target.value);
  };

  return (
    <div style={{ border: "1px solid rgba(0, 0, 0, 0.08)", padding: "8px" }}>
      <div
        style={{
          padding: "2px",
        }}
      >
        <Select {...(props as any)} value={value} onChange={onChange} />
      </div>
    </div>
  );
}

storiesOf("Select", module)
  .addParameters({})
  .add("Basics", () => {
    const hasError = boolean("hasError", false);
    const disabled = boolean("disabled", false);
    const leftIcon = boolean("leftIcon", false);
    const placeholder = text("placeholder", "");

    const children = (
      <>
        {values.map((value) => (
          <option key={value} value={value}>
            {value}
          </option>
        ))}{" "}
      </>
    );

    const props = {
      hasError,
      disabled,
      leftIcon: leftIcon ? "icn-searchfield" : undefined,
      children,
      placeholder: placeholder !== "" ? placeholder : undefined,
    };

    return <Example {...props} />;
  });
